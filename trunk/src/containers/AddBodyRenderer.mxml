<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" horizontalAlign="center"
	borderColor="0x333333" borderStyle="solid" borderThickness="2" horizontalGap="-25">
	<mx:Script>
	<![CDATA[
		import org.cove.ape.StellarObject;
		import org.cove.ape.Vector;
		import physics.SolarSystemProperties;
		
		[Bindable] private var _body:StellarObject;
		[Bindable] private var viewParameters:ViewParameters = ViewParameters.getInstance();
		[Bindable] private var _massList:Array = ["Solar Mass", "Earth Mass", "Jupiter Mass"];
		
		private var _lastSelectedMass:String;
		
		override public function set data(value:Object):void{
        	if(super.data == null) {
	        	cboMass.selectedItem = _lastSelectedMass = "Solar Mass";
	        	colorPicker.selectedColor = 0xFFFFFF;
	        }
        	
        	super.data = value;
        	_body = value as StellarObject;
        	
    	}
    	
    	public function addSetValues($body:StellarObject):void {
    		txtName.text = $body.name;
    		txtMass.text = String($body.mass / SolarSystemProperties.SUN_MASS);
    		cboMass.selectedItem = _lastSelectedMass = "Solar Mass";
    		txtPosX.text = String($body.px / viewParameters.distanceNumerator);
    		txtPosY.text = String($body.py / viewParameters.distanceNumerator);
    		txtVelX.text = String($body.velocity.x / viewParameters.velocityRatio);
    		txtVelY.text = String($body.velocity.y / viewParameters.velocityRatio);
    		txtRadius.text = String($body.radius);
    		colorPicker.selectedColor = $body.color;
    		
    		data = $body;
    	}
    	
    	public function updateAll():StellarObject {
    		_body.name = txtName.text;
    		if(Number(txtMass.text) <= 0)
    			txtMass.text = "0.00000000001";
    		_body.mass = getMassValueByString(cboMass.selectedItem as String) * Number(txtMass.text);
    		_body.px = Number(txtPosX.text) * viewParameters.distanceNumerator;
    		_body.py = Number(txtPosY.text) * viewParameters.distanceNumerator;
    		_body.velocity = new Vector((Number(txtVelX.text) * viewParameters.velocityRatio), (Number(txtVelY.text) * viewParameters.velocityRatio));
    		_body.radius = Number(txtRadius.text);
    		_body.color = colorPicker.selectedColor;
    		
    		return _body;
    	}
    	
    	private function onMassComboChange():void {
    		//update the value in the mass text box by multiplying the ratio of masses
    		
    		for each(var i:String in _massList) {
    			if(i == _lastSelectedMass) {
    				for each(var j:String in _massList) {
		    			if(j == cboMass.selectedItem) {
		    				txtMass.text = String(Number(txtMass.text) * getMassValueByString(i) / getMassValueByString(j));
		    			}
		    		}
    			}
    		}
    		
    		_lastSelectedMass = cboMass.selectedItem as String;
    	}
    	
    	private function getMassValueByString($str:String):Number {
    		switch($str) {
    			case "Solar Mass":
    				return SolarSystemProperties.SUN_MASS;
    			case "Earth Mass":
    				return SolarSystemProperties.EARTH_MASS;
    			case "Jupiter Mass":
    				return SolarSystemProperties.JUPITER_MASS;
    		}
    		
    		return SolarSystemProperties.EARTH_MASS;
    	}
    	
	]]>
	</mx:Script>
	<mx:Form>
		<mx:FormItem label="Name">
			<mx:TextInput id="txtName" text="{_body.name}"/>
		</mx:FormItem>
		<mx:FormItem label="Mass">
			<mx:Canvas width="246" horizontalScrollPolicy="off">
				<!--<mx:Text selectable="false" text=" x Earth Mass"/>-->
				<mx:Text selectable="false" text="^" right="10" verticalCenter="0" mouseChildren="false"/>
				<mx:ComboBox id="cboMass" skin="{null}" right="-10" color="0xFFFFFF" dataProvider="{_massList}" change="onMassComboChange()"
					toolTip="Click to change" verticalCenter="0"/>
				<mx:TextInput id="txtMass" text="1" width="144" restrict="0-9." left="0" verticalCenter="0"/>
			</mx:Canvas>
		</mx:FormItem>
		<mx:FormItem label="Radius">
			<mx:HBox verticalAlign="middle">	
				<mx:TextInput id="txtRadius" width="144" text="5"/>
				<mx:Text selectable="false" text="pixels"/>
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="Color">
			<mx:HBox verticalAlign="middle">	
				<mx:ColorPicker id="colorPicker"/>
			</mx:HBox>
		</mx:FormItem>
	</mx:Form>
	<mx:Form>
		<mx:FormItem label="Position">
			<mx:HBox verticalAlign="middle">
				<mx:Text selectable="false" text="X:"/>
				<mx:TextInput id="txtPosX" text="0" width="89" restrict="0-9.\-"/>
				<mx:Text selectable="false" text="AU"/>
			</mx:HBox>
			<mx:HBox verticalAlign="middle">
				<mx:Text selectable="false" text="Y:"/>
				<mx:TextInput id="txtPosY" text="0" width="89" restrict="0-9.\-"/>
				<mx:Text selectable="false" text="AU"/>
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="Velocity">
			<mx:HBox verticalAlign="middle">
				<mx:Text selectable="false" text="X:"/>
				<mx:TextInput id="txtVelX" text="0" width="89" restrict="0-9.\-"/>
				<mx:Text selectable="false" text="m/s"/>
			</mx:HBox>
			<mx:HBox verticalAlign="middle">
				<mx:Text selectable="false" text="Y:"/>
				<mx:TextInput id="txtVelY" text="0" width="89" restrict="0-9.\-"/>
				<mx:Text selectable="false" text="m/s"/>
			</mx:HBox>
		</mx:FormItem>
	</mx:Form>
</mx:HBox>